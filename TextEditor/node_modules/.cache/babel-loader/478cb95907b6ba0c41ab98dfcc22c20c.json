{"ast":null,"code":"var _jsxFileName = \"/Users/pgurjar/Desktop/group10/TextEditor/src/components/ImportExport.js\";\nimport React, { useState } from \"react\";\nimport { read, utils, writeFile } from \"xlsx\";\n\nconst ImportExport = () => {\n  const [movies, setMovies] = useState([]);\n\n  function convertDataToSpecificFormat(data) {\n    const tmp = {\n      blocks: [{\n        key: \"b5643\",\n        text: data.Title,\n        type: \"unstyled\",\n        depth: 0,\n        inlineStyleRanges: [{\n          offset: 0,\n          length: 5,\n          style: \"BOLD\"\n        }],\n        entityRanges: [],\n        data: {}\n      }, {\n        key: \"9rcpf\",\n        text: data.note,\n        type: \"unstyled\",\n        depth: 0,\n        inlineStyleRanges: [],\n        entityRanges: [],\n        data: {}\n      }],\n      entityMap: {},\n      id: 1\n    };\n  }\n\n  const handleImport = $event => {\n    const files = $event.target.files;\n\n    if (files.length) {\n      const file = files[0];\n      const reader = new FileReader();\n\n      reader.onload = event => {\n        const wb = read(event.target.result);\n        const sheets = wb.SheetNames;\n\n        if (sheets.length) {\n          const rows = utils.sheet_to_json(wb.Sheets[sheets[0]]);\n          setMovies(rows);\n\n          for (let index = 0; index < rows.length; index++) {\n            convertDataToSpecificFormat(rows[index]);\n          }\n        }\n      };\n\n      reader.readAsArrayBuffer(file);\n    }\n  };\n\n  const handleExport = () => {\n    const headings = [[\"Text\"]];\n    const wb = utils.book_new();\n    const ws = utils.json_to_sheet([]);\n    utils.sheet_add_aoa(ws, headings);\n    utils.sheet_add_json(ws, movies, {\n      origin: \"A2\",\n      skipHeader: true\n    });\n    utils.book_append_sheet(wb, ws, \"Report\");\n    writeFile(wb, \"Movie Report.csv\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"importExport\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    className: \"custom-file-input\",\n    id: \"inputGroupFile\",\n    required: true,\n    onChange: handleImport,\n    accept: \".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-file-label\",\n    htmlFor: \"inputGroupFile\",\n    style: {\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, \"Import\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleExport,\n    className: \"btn btn-primary float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, \"Export \", /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-download\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 28\n    }\n  }))));\n};\n\nexport default ImportExport;","map":{"version":3,"sources":["/Users/pgurjar/Desktop/group10/TextEditor/src/components/ImportExport.js"],"names":["React","useState","read","utils","writeFile","ImportExport","movies","setMovies","convertDataToSpecificFormat","data","tmp","blocks","key","text","Title","type","depth","inlineStyleRanges","offset","length","style","entityRanges","note","entityMap","id","handleImport","$event","files","target","file","reader","FileReader","onload","event","wb","result","sheets","SheetNames","rows","sheet_to_json","Sheets","index","readAsArrayBuffer","handleExport","headings","book_new","ws","json_to_sheet","sheet_add_aoa","sheet_add_json","origin","skipHeader","book_append_sheet","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { read, utils, writeFile } from \"xlsx\";\n\nconst ImportExport = () => {\n    const [movies, setMovies] = useState([]);\n\n    function convertDataToSpecificFormat(data) {\n        const tmp = {\n            blocks: [\n                {\n                    key: \"b5643\",\n                    text: data.Title,\n                    type: \"unstyled\",\n                    depth: 0,\n                    inlineStyleRanges: [\n                        {\n                            offset: 0,\n                            length: 5,\n                            style: \"BOLD\",\n                        },\n                    ],\n                    entityRanges: [],\n                    data: {},\n                },\n                {\n                    key: \"9rcpf\",\n                    text: data.note,\n                    type: \"unstyled\",\n                    depth: 0,\n                    inlineStyleRanges: [],\n                    entityRanges: [],\n                    data: {},\n                },\n            ],\n            entityMap: {},\n            id: 1,\n        };\n    }\n\n    const handleImport = ($event) => {\n        const files = $event.target.files;\n        if (files.length) {\n            const file = files[0];\n            const reader = new FileReader();\n            reader.onload = (event) => {\n                const wb = read(event.target.result);\n                const sheets = wb.SheetNames;\n                if (sheets.length) {\n                    const rows = utils.sheet_to_json(wb.Sheets[sheets[0]]);\n                    setMovies(rows);\n                    for (let index = 0; index < rows.length; index++) {\n                        convertDataToSpecificFormat(rows[index]);\n                    }\n                }\n            };\n            reader.readAsArrayBuffer(file);\n        }\n    };\n\n    const handleExport = () => {\n        const headings = [[\"Text\"]];\n        const wb = utils.book_new();\n        const ws = utils.json_to_sheet([]);\n        utils.sheet_add_aoa(ws, headings);\n        utils.sheet_add_json(ws, movies, { origin: \"A2\", skipHeader: true });\n        utils.book_append_sheet(wb, ws, \"Report\");\n        writeFile(wb, \"Movie Report.csv\");\n    };\n\n    return (\n        <div className=\"importExport\">\n            <div className=\"input-group\">\n                <div className=\"custom-file\">\n                    <input\n                        type=\"file\"\n                        name=\"file\"\n                        className=\"custom-file-input\"\n                        id=\"inputGroupFile\"\n                        required\n                        onChange={handleImport}\n                        accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                    />\n                    <label\n                        className=\"custom-file-label\"\n                        htmlFor=\"inputGroupFile\"\n                        style={{ fontWeight: \"bold\" }}\n                    >\n                        Import\n                    </label>\n                </div>\n            </div>\n            <div>\n                <button onClick={handleExport} className=\"btn btn-primary float-right\">\n                    Export <i className=\"fa fa-download\"></i>\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default ImportExport;\n"]},"metadata":{},"sourceType":"module"}